ALTER TABLE GOOGLE_USER_PROFILE MODIFY (USER_REFRESH_TOKEN VARCHAR2(2000));

ALTER TABLE TMTD.GOOGLE_USER_PROFILE MODIFY USER_REFRESH_TOKEN VARCHAR2(2000);

--1) 일반 회원가입 쿼리
INSERT INTO USER_PROFILE
		(USER_ACCOUNT_ID, 
		USER_EMAIL, USER_PASSWORD, USER_NAME,
		USER_NICKNAME, 
		USER_AUTH, USER_PHONE_NUMBER, USER_AUTO_LOGIN_TOKEN, 
		USER_JOIN_DATE, USER_LAST_ACCESS_DATE, USER_GENDER, 
		USER_SITE, USER_BIRTH, USER_PROFILE_FILE, USER_DELFLAG)
	VALUES((SELECT 'TMTD'|| ID  AS USER_ACCOUNT_ID 
			FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
					FROM(SELECT USER_ACCOUNT_ID  AS ID 	FROM
							(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
								UNION 
							SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
			'wjddns7828@naver.com', 'qwer1234','임정운',
			(SELECT '타문타답'|| ID  AS USER_ACCOUNT_ID 
				FROM(
					SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
						FROM(SELECT USER_ACCOUNT_ID  AS ID 
							FROM(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
									UNION 
								SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
									UNION 
								SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
									UNION 
								SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
			'S','01066389809', 'AUTOLOGIN12345',
			CURRENT_DATE,CURRENT_DATE , 'M', 
			'T', '19980902', '기본경로 잡아주기' , 'N' );
		
--2)네이버 회원가입 쿼리
INSERT INTO NAVER_USER_PROFILE nup2
		(USER_ACCOUNT_ID,
		USER_EMAIL, USER_REFRESH_TOKEN,	USER_NAME, 
		USER_NICKNAME, 
		USER_JOIN_DATE, USER_LAST_ACCESS_DATE, USER_GENDER, 
		USER_BIRTH, USER_PHONE_NUMBER, USER_SITE, 
		USER_DELFLAG, USER_PROFILE_FILE, USER_AUTH)
		VALUES((SELECT 'TMTD'|| ID  AS USER_ACCOUNT_ID 
			FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
					FROM(SELECT USER_ACCOUNT_ID  AS ID 	
						FROM(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
								UNION 
							SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				'wjddns7828@naver', '1234', '임정운', 
				(SELECT '네이버'|| ID  AS USER_ACCOUNT_ID 
					FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
							FROM(SELECT USER_ACCOUNT_ID  AS ID 	FROM
									(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
										UNION 
									SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				CURRENT_DATE , CURRENT_DATE , 'M', 
				'19980902', '0106638', 'N' , 
				'N' , 'ㅁㄴㅇ', 'S');
			
--3)카카오 회원가입 쿼리
INSERT INTO KAKAO_USER_PROFILE kup2 
		(USER_ACCOUNT_ID,
		USER_EMAIL, USER_REFRESH_TOKEN,	USER_NAME, 
		USER_NICKNAME, 
		USER_JOIN_DATE, USER_LAST_ACCESS_DATE, USER_GENDER, 
		USER_BIRTH, USER_PHONE_NUMBER, USER_SITE, 
		USER_DELFLAG, USER_PROFILE_FILE, USER_AUTH)
		VALUES((SELECT 'TMTD'|| ID  AS USER_ACCOUNT_ID 
			FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
					FROM(SELECT USER_ACCOUNT_ID  AS ID 	
						FROM(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
								UNION 
							SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				'wjddns7828@naver', '1234', '임정운', 
				(SELECT '카카오'|| ID  AS USER_ACCOUNT_ID 
					FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
							FROM(SELECT USER_ACCOUNT_ID  AS ID 	FROM
									(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
										UNION 
									SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				CURRENT_DATE , CURRENT_DATE , 'M', 
				'19980902', '0106638', 'K', 
				'N' , 'ㅁㄴㅇ', 'S');
			
--4)구글 회원가입 쿼리
INSERT INTO GOOGLE_USER_PROFILE gup2 
		(USER_ACCOUNT_ID,
		USER_EMAIL, USER_REFRESH_TOKEN,	USER_NAME, 
		USER_NICKNAME, 
		USER_JOIN_DATE, USER_LAST_ACCESS_DATE, USER_GENDER, 
		USER_BIRTH, USER_PHONE_NUMBER, USER_SITE, 
		USER_DELFLAG, USER_PROFILE_FILE, USER_AUTH)
		VALUES((SELECT 'TMTD'|| ID  AS USER_ACCOUNT_ID 
			FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
					FROM(SELECT USER_ACCOUNT_ID  AS ID 	
						FROM(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
								UNION 
							SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
								UNION 
							SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				'wjddns7828@naver', '1234', '임정운', 
				(SELECT '구글'|| ID  AS USER_ACCOUNT_ID 
					FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID 
							FROM(SELECT USER_ACCOUNT_ID  AS ID 	FROM
									(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up 
										UNION 
									SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup 
										UNION 
									SELECT USER_ACCOUNT_ID FROM GOOGLE_USER_PROFILE gup)))),
				CURRENT_DATE , CURRENT_DATE , 'M', 
				'19980902', '01066389809', 'G' , 
				'N' , 'ㅁㄴㅇ', 'S');

--5)이메일 중복 확인 쿼리
	SELECT 
		CASE WHEN COUNT(*) > 0  THEN 'TRUE' ELSE 'FALSE' END
			FROM USER_PROFILE up 
				WHERE USER_EMAIL ='wjddns7828@naver.com';

--6)닉네임 변경 전 중복 된 닉네임 확인 쿼리
SELECT 
			CASE WHEN COUNT(USER_NICKNAME) > 0 THEN 'TRUE' ELSE 'FALSE' END
			FROM(
				SELECT up.USER_NICKNAME AS USER_NICKNAME
					FROM USER_PROFILE up 
				UNION
				SELECT kup.USER_NICKNAME AS USER_NICKNAME 
					FROM KAKAO_USER_PROFILE kup 
				UNION
				SELECT nup.USER_NICKNAME AS USER_NICKNAME
					FROM NAVER_USER_PROFILE nup 
				UNION
				SELECT gup.USER_NICKNAME AS USER_NICKNAME
					FROM GOOGLE_USER_PROFILE gup) 
			WHERE USER_NICKNAME = '테스트1';
			
--7)닉네임 변경 쿼리
UPDATE USER_PROFILE SET USER_NICKNAME = '1234'
	WHERE USER_EMAIL = 'wjddns7828@naver.com';

--8)핸드폰 중복 확인
SELECT 
	CASE WHEN COUNT(*) > 0 THEN 'TRUE' ELSE 'FALSE' END
	FROM USER_PROFILE up 
		WHERE USER_PHONE_NUMBER ='01066389809';
		
--9)일반 로그인
SELECT USER_ACCOUNT_ID, USER_EMAIL, USER_NAME, USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER, USER_AUTO_LOGIN_TOKEN, USER_GENDER, USER_SITE,
	'<img id=profile_img src='''||USER_PROFILE_FILE ||''' alt='''||USER_NICKNAME||'님의 프로필사진''></img>' AS USER_PROFILE_FILE , USER_CHADAN_COUNT 
	FROM USER_PROFILE up 
	WHERE USER_EMAIL ='test1@classtest.com'
	AND USER_PASSWORD ='test1';

--10)로그인시 최근 접속시간 최근 접속시간 수정 쿼리
UPDATE USER_PROFILE SET USER_LAST_ACCESS_DATE = CURRENT_DATE
	WHERE USER_ACCOUNT_ID = 'TMTD194';

--11)리프레쉬토큰을 변경하는 쿼리(다이나믹)
UPDATE NAVER_USER_PROFILE SET USER_REFRESH_TOKEN = '1234'
	WHERE USER_ACCOUNT_ID = '';

--12)카카오소셜 로그인
SELECT USER_ACCOUNT_ID , USER_EMAIL, USER_NAME, USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER, USER_REFRESH_TOKEN, USER_GENDER, USER_SITE,
	'<img id=profile_img src='''||USER_PROFILE_FILE ||''' alt='''||USER_NICKNAME||'님의 프로필사진''></img>' AS USER_PROFILE_FILE 
	FROM KAKAO_USER_PROFILE 
	WHERE USER_EMAIL ='wjddns7828@naver';

-- 카카오소셜 로그인 최근 접속시간 수정 쿼리
UPDATE KAKAO_USER_PROFILE  SET USER_LAST_ACCESS_DATE = CURRENT_DATE
	WHERE USER_ACCOUNT_ID = 'TMTD192';

--13)구글 소셜 로그인
SELECT USER_ACCOUNT_ID , USER_EMAIL, USER_NAME, USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER, USER_REFRESH_TOKEN, USER_GENDER, USER_SITE,
	'<img id=profile_img src='''||USER_PROFILE_FILE ||''' alt='''||USER_NICKNAME||'님의 프로필사진''></img>' AS USER_PROFILE_FILE 
	FROM GOOGLE_USER_PROFILE 
	WHERE USER_EMAIL ='wjddns7828@naver';

-- 구글 소셜 로그인 최근 접속시간 수정 쿼리
UPDATE GOOGLE_USER_PROFILE  SET USER_LAST_ACCESS_DATE = CURRENT_DATE
	WHERE USER_ACCOUNT_ID = 'TMTD193';

--14)네이버소셜 로그인
SELECT USER_ACCOUNT_ID , USER_EMAIL, USER_NAME, USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER, USER_REFRESH_TOKEN, USER_GENDER, USER_SITE,
	'<img id=profile_img src='''||USER_PROFILE_FILE ||''' alt='''||USER_NICKNAME||'님의 프로필사진''></img>' AS USER_PROFILE_FILE 
	FROM NAVER_USER_PROFILE 
	WHERE USER_EMAIL ='wjddns7828@naver';

-- 네이버소셜 로그인 최근 접속시간 수정 쿼리
UPDATE NAVER_USER_PROFILE  SET USER_LAST_ACCESS_DATE = CURRENT_DATE
	WHERE USER_ACCOUNT_ID = 'TMTD191';
	
--15)관리자 계정 등록
INSERT INTO ADMIN_PROFILE ap (ADPR_ID,ADPR_PASSWORD, ADPR_NAME, ADPR_ACCESS_IP, ADPR_AUTH)
	VALUES('testadmin1234','asd123','어드민 계정생성 테스트', '테스트IP','T');
	
--16)관리자 계정 비밀번호 초기화
UPDATE ADMIN_PROFILE SET ADPR_LAST_ACCESS = NULL
	WHERE ADPR_ID ='testadmin1234';

--17)관리자 접속 시 최근 접속시간 설정
UPDATE ADMIN_PROFILE SET ADPR_LAST_ACCESS = CURRENT_DATE 
	WHERE ADPR_ID = 'testadmin1234';

--18)관리자 비밀번호 설정
UPDATE ADMIN_PROFILE SET ADPR_PASSWORD = '1234'
	WHERE ADPR_ID = 'testadmin1234';

--19)관리자 로그인
SELECT ADPR_ID , ADPR_PASSWORD , ADPR_NAME , ADPR_AUTH ,ADPR_DELFLAG 
	FROM ADMIN_PROFILE ap 
		WHERE ADPR_ID ='testadmin1234'
			AND ADPR_PASSWORD ='1234'
			AND ADPR_ACCESS_IP = '테스트IP';

--20)정지 확인
SELECT COUNT(USJE_JEONGJI_SANGTAE)
	FROM USER_JEONGJI uj 
	WHERE USJE_ACCOUNT_ID = 'TMTD171'
	AND NOT USJE_JEONGJI_SANGTAE IN ('N');

--21)정지 계정 추가
INSERT INTO USER_JEONGJI uj (USJE_ACCOUNT_ID,USJE_JEONGJI_SANGTAE,USJE_JEONGJI_DAY)
	VALUES('TMTD171','IY','3');
	
--22)정지 계정 해제 쿼리(CRON)
UPDATE USER_JEONGJI SET USJE_JEONGJI_SANGTAE = 'N'
	WHERE (USJE_JEONGJI_REGIST_DATE+USJE_JEONGJI_DAY-1) <= CURRENT_DATE ;

--23)정지 내역 조회
SELECT USJE_JEONGJI_SANGTAE ,USJE_JEONGJI_DAY ,USJE_JEONGJI_REGIST_DATE , USJE_JEONGJI_REGIST_DATE+USJE_JEONGJI_DAY AS JEONGJI_END_DAY
	FROM USER_JEONGJI uj
	WHERE USJE_ACCOUNT_ID ='TMTD161';

--24)휴면 계정 설정 쿼리(CRON)
UPDATE USER_PROFILE SET USER_DELFLAG = 'H'
	WHERE USER_LAST_ACCESS_DATE+366 < CURRENT_DATE;

--25)계정을 활성화 시키는 쿼리
UPDATE USER_PROFILE SET USER_DELFLAG = 'N'
	WHERE USER_ACCOUNT_ID ='TMTD117';

--26)회원 리스트 쿼리 (다이나믹 쿼리)
SELECT RN,USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG,USJE_JEONGJI_SANGTAE
	FROM(
			SELECT ROW_NUMBER() OVER (ORDER BY USER_JOIN_DATE DESC /*(다이나믹 쿼리)*/) AS RN 
				,USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG, a.USJE_JEONGJI_SANGTAE
				FROM(
					SELECT 	up.USER_ACCOUNT_ID AS USER_ACCOUNT_ID, up.USER_EMAIL AS USER_EMAIL, up.USER_NAME AS USER_NAME,
							up.USER_NICKNAME AS USER_NICKNAME, up.USER_AUTH AS USER_AUTH, up.USER_PHONE_NUMBER AS USER_PHONE_NUMBER, 
							up.USER_JOIN_DATE AS USER_JOIN_DATE, up.USER_LAST_ACCESS_DATE AS USER_LAST_ACCESS_DATE, up.USER_GENDER AS USER_GENDER,
							up.USER_SITE AS USER_SITE, up.USER_DELFLAG AS USER_DELFLAG ,uj.USJE_JEONGJI_SANGTAE AS USJE_JEONGJI_SANGTAE 
						FROM USER_PROFILE up , USER_JEONGJI uj 
						WHERE up.USER_ACCOUNT_ID = uj.USJE_ACCOUNT_ID 
					UNION
					SELECT 	kup.USER_ACCOUNT_ID AS USER_ACCOUNT_ID, kup.USER_EMAIL AS USER_EMAIL, kup.USER_NAME AS USER_NAME,
							kup.USER_NICKNAME AS USER_NICKNAME, kup.USER_AUTH AS USER_AUTH, kup.USER_PHONE_NUMBER AS USER_PHONE_NUMBER, 
							kup.USER_JOIN_DATE AS USER_JOIN_DATE, kup.USER_LAST_ACCESS_DATE AS USER_LAST_ACCESS_DATE, kup.USER_GENDER AS USER_GENDER,
							kup.USER_SITE AS USER_SITE, kup.USER_DELFLAG AS USER_DELFLAG ,uj4.USJE_JEONGJI_SANGTAE AS USJE_JEONGJI_SANGTAE 
						FROM  KAKAO_USER_PROFILE kup , USER_JEONGJI uj4 
						WHERE kup.USER_ACCOUNT_ID = uj4.USJE_ACCOUNT_ID
					UNION
					SELECT 	nup.USER_ACCOUNT_ID AS USER_ACCOUNT_ID, nup.USER_EMAIL AS USER_EMAIL, nup.USER_NAME AS USER_NAME,
							nup.USER_NICKNAME AS USER_NICKNAME, nup.USER_AUTH AS USER_AUTH, nup.USER_PHONE_NUMBER AS USER_PHONE_NUMBER, 
							nup.USER_JOIN_DATE AS USER_JOIN_DATE, nup.USER_LAST_ACCESS_DATE AS USER_LAST_ACCESS_DATE, nup.USER_GENDER AS USER_GENDER,
							nup.USER_SITE AS USER_SITE, nup.USER_DELFLAG AS USER_DELFLAG ,uj2.USJE_JEONGJI_SANGTAE AS USJE_JEONGJI_SANGTAE 
						FROM  NAVER_USER_PROFILE nup , USER_JEONGJI uj2
						WHERE nup.USER_ACCOUNT_ID = uj2.USJE_ACCOUNT_ID
					UNION
					SELECT 	gup.USER_ACCOUNT_ID AS USER_ACCOUNT_ID, gup.USER_EMAIL AS USER_EMAIL, gup.USER_NAME AS USER_NAME,
							gup.USER_NICKNAME AS USER_NICKNAME, gup.USER_AUTH AS USER_AUTH, gup.USER_PHONE_NUMBER AS USER_PHONE_NUMBER, 
							gup.USER_JOIN_DATE AS USER_JOIN_DATE, gup.USER_LAST_ACCESS_DATE AS USER_LAST_ACCESS_DATE, gup.USER_GENDER AS USER_GENDER,
							gup.USER_SITE AS USER_SITE, gup.USER_DELFLAG AS USER_DELFLAG ,uj3.USJE_JEONGJI_SANGTAE AS USJE_JEONGJI_SANGTAE 
						FROM  GOOGLE_USER_PROFILE gup, USER_JEONGJI uj3
						WHERE gup.USER_ACCOUNT_ID = uj3.USJE_ACCOUNT_ID
					) a
				-- 특정 조건의 학생만 검색 (다이나믹 쿼리)
--				WHERE USER_AUTH IN('S','I')
--				AND USER_AUTH = 'S' --학생 유형에 대한 조건
--				AND USER_SITE = 'K' --조건
--				AND USER_GENDER = 'M' --조건
--				AND USER_DELFLAG = 'N' --조건
				-- 특정 검색어 (다이나믹 쿼리)
--				AND USER_NAME='임정운' --검색
--	ORDER BY USER_JOIN_DATE ASC --가입오래된 순
--	ORDER BY USER_LAST_ACCESS_DATE DESC --최근 접속일 순
	)
	WHERE RN BETWEEN 1 AND 5;

--27)회원 상세 조회 쿼리
SELECT USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG
	FROM(
		SELECT USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG 
			FROM USER_PROFILE up 
		UNION
		SELECT USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG 
			FROM  KAKAO_USER_PROFILE kup 
		UNION
		SELECT USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG 
			FROM  NAVER_USER_PROFILE nup 
		UNION
		SELECT USER_ACCOUNT_ID,USER_EMAIL ,USER_NAME ,USER_NICKNAME,USER_AUTH,USER_PHONE_NUMBER ,USER_JOIN_DATE ,USER_LAST_ACCESS_DATE ,USER_GENDER ,USER_SITE,USER_DELFLAG 
			FROM  GOOGLE_USER_PROFILE gup
		)
	WHERE USER_ACCOUNT_ID ='TMTD121';

--28)회원 정보 수정 쿼리(별명 / 프사)
UPDATE USER_PROFILE SET USER_NICKNAME ='토마토', USER_PROFILE_FILE ='기본 경로'
	WHERE USER_ACCOUNT_ID ='TMTD191';

--29)회원 비밀번호 변경 쿼리
UPDATE USER_PROFILE SET USER_PASSWORD ='1111'
	WHERE USER_ACCOUNT_ID ='TMTD191';

--30)회원 탈퇴 처리
UPDATE USER_PROFILE /*(다이나믹)*/ SET USER_DELFLAG = 'Y'
	WHERE USER_ACCOUNT_ID ='TMTD191';

--31)결제 내역 확인
SELECT COUNT(*)
	FROM GYEOLJE g 
	WHERE GYEO_ACCOUNT_ID = 'TMTD191'
	AND NOT GYEO_STATUS IN ('C','P','R');

--32)정산 내역 확인
SELECT COUNT(*)
	FROM JEONGSAN j 
		WHERE JEON_INSTR_ID = 'TMTD101'
		AND JEON_STATUS = 'W';

--33)로그인 실패시 차단 횟수 증가 쿼리
UPDATE USER_PROFILE SET USER_CHADAN_COUNT = USER_CHADAN_COUNT +1
	WHERE USER_EMAIL ='test170@classtest.com';
		
--34)로그인 실패 5회 이상일 경우 해당 날짜를 등록하는 쿼리
UPDATE USER_PROFILE SET USER_CHADAN_REGIST_DATE = CURRENT_DATE
	WHERE USER_EMAIL ='test170@classtest.com';

--35)로그인 차단 상태일 때 해당 비교 후 수정 현재시간 +10 - 등록시간 이 10보다 클 때 TRUE: 7828980902 반환 / FALSE:잔여 시간 반환 
SELECT 
	CASE WHEN ROUND((USER_CHADAN_REGIST_DATE- CURRENT_DATE+(10/1440))*1440) < 10 THEN 7828980902 ELSE ROUND((CURRENT_DATE-USER_CHADAN_REGIST_DATE+(10/1440)) * 1440) END
	FROM USER_PROFILE up
		WHERE USER_EMAIL ='test170@classtest.com';

--36)차단 시간이 지난 상태일 경우 해당 컬럼을 DELETE해주는 쿼리
UPDATE USER_PROFILE
	SET USER_CHADAN_REGIST_DATE = NULL
	WHERE USER_EMAIL = 'test170@classtest.com';
	
--37)로그인시 차단횟수를 확인하는 쿼리
SELECT USER_CHADAN_COUNT FROM USER_PROFILE up 
	WHERE USER_EMAIL ='wjddns7828@naver.com';


--38)로그인시 REFRESH TOKEN이 다르면 갈아끼워주는 쿼리**
	UPDATE NAVER_USER_PROFILE SET USER_REFRESH_TOKEN = '테스트'
		WHERE USER_EMAIL = 'wjddns7828@naver.com'
		AND USER_REFRESH_TOKEN != '123';
	
--39) 비밀버호 초기화 토큰을 업데이트 하는 쿼리
	UPDATE USER_PROFILE SET USER_PASSWORD_RESET_TOKEN ='쿼리테스트' 
		WHERE USER_ACCOUNT_ID ='TMTD1';
	
--40) 비밀버호 초기화 토큰을 업데이트 하는 쿼리
	UPDATE USER_PROFILE SET USER_PASSWORD  ='qwer1234!' 
		WHERE USER_PASSWORD_RESET_TOKEN ='쿼리테스트';

--41) 회원 삭제 처리
CREATE TABLE DELETED_USER_PROFILE(
	USER_ACCOUNT_ID VARCHAR2(14),
	USER_EMAIL VARCHAR2(320),
	USER_NAME VARCHAR2(50),
	USER_NICKNAME VARCHAR2(50),
	USER_AUTH VARCHAR2(2),
	USER_PHONE_NUMBER VARCHAR2(12),
	USER_JOIN_DATE DATE,
	USER_GENDER VARCHAR2(2),
	USER_SITE VARCHAR2(2),
	USER_BIRTH DATE,
	USER_PROFILE_FILE VARCHAR2(1000),
	USER_DELETE_DATE DATE DEFAULT SYSDATE,
	FOREIGN KEY (USER_ACCOUNT_ID) REFERENCES USER_PROFILE(USER_ACCOUNT_ID) ON DELETE CASCADE
);

COMMENT ON TABLE DELETED_USER_PROFILE IS '삭제된 사용자의 정보를 담는 테이블';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_ACCOUNT_ID IS '삭제된 회원 고유 아이디';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_EMAIL IS '삭제된 회원 이메일';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_NAME IS '삭제된 회원명';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_NICKNAME IS '삭제된 회원 닉네임';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_AUTH IS '권한';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_PHONE_NUMBER IS '삭제된 회원 휴대폰 번호';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_JOIN_DATE IS '가입일';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_GENDER IS '성별';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_SITE IS '가입사이트';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_BIRTH IS '생년월일';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_PROFILE_FILE IS '프로필 이미지 파일';
COMMENT ON COLUMN DELETED_USER_PROFILE.USER_DELETE_DATE IS '삭제된 날짜';


INSERT INTO DELETED_USER_PROFILE
		(USER_ACCOUNT_ID, USER_EMAIL, USER_NAME,
		USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER,
		USER_JOIN_DATE, USER_GENDER, USER_SITE,
		USER_BIRTH, USER_PROFILE_FILE)
	SELECT USER_ACCOUNT_ID, USER_EMAIL, USER_NAME, 
	    USER_NICKNAME, USER_AUTH, USER_PHONE_NUMBER,
	    USER_JOIN_DATE, USER_GENDER, USER_SITE,
	    USER_BIRTH, USER_PROFILE_FILE
	FROM USER_PROFILE
		WHERE  USER_ACCOUNT_ID ='TMTD1';
	
	
UPDATE TMTD.USER_PROFILE SET 
		USER_EMAIL='TMTD1', USER_NAME='탈퇴계정' || (SELECT COUNT(*)  FROM DELETED_USER_PROFILE), 
		USER_NICKNAME='탈퇴계정' || (SELECT COUNT(*)  FROM DELETED_USER_PROFILE), USER_PHONE_NUMBER=(SELECT COUNT(*)  FROM DELETED_USER_PROFILE),USER_DELFLAG='Y', 
		USER_CHADAN_COUNT=0, USER_CHADAN_REGIST_DATE=NULL, USER_PASSWORD_RESET_TOKEN= NULL
	WHERE USER_ACCOUNT_ID ='TMTD1';


--41) 관리자 페이지 접속 전 해당 유저의 IP 확인하는 기능
SELECT COUNT(*)
	FROM ADMIN_ACCESS_IP_LIST
	WHERE IP_ADDRESS ='192.168.8.170';

--42) 접속 가능 IP 테이블 추가
CREATE TABLE ADMIN_ACCESS_IP_LIST(
	IP_ADDRESS VARCHAR2(20),
	ADPR_ID VARCHAR2(50),
	FOREIGN KEY (ADPR_ID) REFERENCES ADMIN_PROFILE(ADPR_ID)
);
COMMENT ON TABLE ADMIN_ACCESS_IP_LIST IS '관리자 페이지에 접속 가능한 IP를 모아둔 테이블';
COMMENT ON COLUMN ADMIN_ACCESS_IP_LIST.IP_ADDRESS IS '접속 가능한 IP';
COMMENT ON COLUMN ADMIN_ACCESS_IP_LIST.ADPR_ID IS '해당 IP의 ID';

--43) 접속 가능 IP 및 ID추가하기
INSERT INTO ADMIN_ACCESS_IP_LIST
	(IP_ADDRESS, ADPR_ID)
	VALUES('192.168.8.170', 't_wjddns7828');

--44) 관리자 로그인
SELECT ADPR_ID, ADPR_NAME ,ADPR_AUTH,ADPR_LAST_ACCESS 
	FROM ADMIN_PROFILE ap 
		WHERE ADPR_ID ='t_wjddns7828'
		AND ADPR_PASSWORD ='qwer1234'
		AND ADPR_DELFLAG ='N';

--45) 관리자 로그인 후 접속 시간 초기화
UPDATE ADMIN_PROFILE SET ADPR_LAST_ACCESS = CURRENT_DATE 
	WHERE ADPR_ID ='t_wjddns7828';
	
--46) 관리자 로그인 후 접속시간이 없을 시 비밀번호