<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdtd.tmtd.model.mapper.InstrDaoImpl">

<resultMap type="instrVo" id="instrMap">
	<result column="INPR_SEQ" property="inprSeq"/>
	<result column="INPR_ACCOUNT_ID" property="inprAccountId"/>
	<result column="INPR_INTRO" property="inprIntro"/>
	<result column="INPR_FEE" property="inprFee"/>
	<result column="INPR_CERT" property="inprCert"/>
	<result column="INPR_LIKE" property="inprLike"/>
	<result column="INPR_LIKE_COUNT" property="inprLikeCount"/>
	<result column="INPR_VIEW_COUNT" property="inprViewCount"/>
	<result column="INPR_SITE_YOUTUBE" property="inprSiteYoutube"/>
	<result column="INPR_SITE_WEB" property="inprSiteWeb"/>
	<result column="INPR_SITE_MOBILE" property="inprSiteMobile"/>
	<result column="SUBJECTS_TITLE" property="subjectsTitle"/>
	<result column="SUBJECTS_MAJOR_TITLE" property="subjectsMajorTitle"/>
	<result column="INPR_SUBJECTS" property="inprSubjects"/>
	<result column="INPR_SUBJECTS_MAJOR" property="inprSubjectsMajor"/>
	<result column="REVIEW_COUNT" property="reviewCount"/>
	<result column="INGI" property="ingi"/>
	
	<collection property="instrEduVo" resultMap="instrEduMap"/>
	<collection property="userProfileVo" resultMap="userProfileMap"/>
	<collection property="classVo" resultMap="classMap"/>
	<collection property="subjectVo" resultMap="subjMap"/>
</resultMap>
<resultMap type="instrEduVo" id="instrEduMap">
	<result column="INED_SEQ" property="inedSeq"/>
	<result column="INED_STAGE" property="inedStage"/>
	<result column="INED_SCHOOL" property="inedSchool"/>
	<result column="INED_MAJOR" property="inedMajor"/>
	<result column="INED_MINOR" property="inedMinor"/>
	<result column="INED_START" property="inedStart"/>
	<result column="INED_END" property="inedEnd"/>
</resultMap>
<resultMap type="userProfileVo" id="userProfileMap">
	<result column="USER_PROFILE_FILE" property="userProfileFile"/>
	<result column="USER_NICKNAME" property="userNickname"/>
	<result column="USER_BIRTH" property="userBirth"/>
	<result column="USER_ACCOUNT_ID" property="userAccountId"/>
	<result column="USER_GENDER" property="userGender"/>
	<result column="USER_JOIN_DATE" property="userJoinDate"/>
</resultMap>
<resultMap type="subjectVo" id="subjMap">
	<result column="SUBJ_CODE" property="subjCode"/>
</resultMap>
<resultMap type="classVo" id="classMap">
	<result column="CLAS_ID" property="clasId"/>
	<result column="CLAS_TITLE" property="clasTitle"/>
	<result column="CLAS_LOCATION" property="clasLocation"/>
	<result column="CLAS_SUEOP_NALJJA" property="clasSueopNaljja"/>
	<result column="CLAS_SUGANGRYO" property="clasSugangRyo"/>
	<result column="CLAS_SUBJECT_JEONGBO" property="clasSubjectJeongbo"/>
</resultMap>

<select id="getMyInstrProfile" resultMap="instrMap">
	SELECT INPR_SEQ, INED_SEQ, INPR_ACCOUNT_ID, INPR_INTRO, INPR_FEE,
		INPR_SITE_YOUTUBE, INPR_SITE_WEB, INPR_SITE_MOBILE,
		INPR_SUBJECTS, INPR_SUBJECTS_MAJOR, INED_STAGE,
		INED_SCHOOL, INED_MAJOR, INED_MINOR, TO_CHAR(INED_START,'YYYY-MM-DD') AS INED_START, 
		TO_CHAR(INED_END, 'YYYY-MM-DD') AS INED_END,
		(SELECT JSON_ARRAYAGG(s.SUTA_TITLE) 
		     FROM JSON_TABLE(INPR_SUBJECTS, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_TITLE,
		    (SELECT JSON_ARRAYAGG(s.SUTA_TITLE)
		     FROM JSON_TABLE(INPR_SUBJECTS_MAJOR, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_MAJOR_TITLE
	FROM INSTR_PROFILE LEFT JOIN INSTR_EDULEVEL
	ON INPR_SEQ = INED_INPR_SEQ
	WHERE INPR_ACCOUNT_ID = #{userAccountId}
</select>

<insert id="insertInstrProfile">
	<selectKey keyProperty="inprSeq" resultType="int" order="BEFORE">
		SELECT INPR_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO INSTR_PROFILE (INPR_SEQ, INPR_ACCOUNT_ID, INPR_INTRO, INPR_FEE,
							 INPR_SITE_YOUTUBE, INPR_SITE_WEB, INPR_SITE_MOBILE, 
							 INPR_SUBJECTS, INPR_SUBJECTS_MAJOR, INPR_REGDATE)
	VALUES (#{inprSeq}, #{inprAccountId}, #{inprIntro}, #{inprFee},
			#{inprSiteYoutube}, #{inprSiteWeb}, #{inprSiteMobile},
			#{inprSubjects}, #{inprSubjectsMajor}, CURRENT_DATE)
</insert>

<insert id="insertInstrEdulevel">
	INSERT INTO INSTR_EDULEVEL (INED_SEQ, INED_INPR_SEQ, INED_STAGE, 
							INED_SCHOOL, INED_MAJOR, INED_MINOR, 
							INED_START, INED_END, INED_REGDATE)
	VALUES (INED_SEQ.NEXTVAL, #{inedInprSeq}, #{inedStage}, 
			#{inedSchool}, #{inedMajor}, #{inedMinor}, 
			TO_DATE(#{inedStart}, 'YYYY-MM-DD'), TO_DATE(#{inedEnd}, 'YYYY-MM-DD'), CURRENT_DATE)
</insert>

<update id="updateInstrProfile">
	UPDATE INSTR_PROFILE SET INPR_INTRO=#{inprIntro}, INPR_FEE=#{inprFee}, INPR_SITE_YOUTUBE=#{inprSiteYoutube}, 
							INPR_SITE_WEB=#{inprSiteWeb}, INPR_SITE_MOBILE=#{inprSiteMobile}, INPR_SUBJECTS=#{inprSubjects}, 
							INPR_SUBJECTS_MAJOR=#{inprSubjectsMajor}, INPR_REGDATE=CURRENT_DATE
	WHERE INPR_SEQ=#{inprSeq}
</update>

<update id="updateInstrEdulevel">
	UPDATE INSTR_EDULEVEL SET INED_STAGE=#{inedStage}, INED_SCHOOL=#{inedSchool}, INED_MAJOR=#{inedMajor}, 
							INED_MINOR=#{inedMinor}, INED_START=TO_DATE(#{inedStart}, 'YYYY-MM-DD'), INED_END=TO_DATE(#{inedEnd}, 'YYYY-MM-DD'), INED_REGDATE=CURRENT_DATE
	WHERE INED_SEQ=#{inedSeq}
		AND INED_INPR_SEQ = #{inedInprSeq}
</update>

<delete id="deleteInstrEdulevel">
	DELETE FROM INSTR_EDULEVEL WHERE INED_SEQ=#{inedSeq} 
</delete>

<select id="getAllInstr" resultMap="instrMap">
SELECT INPR_SEQ, INPR_ACCOUNT_ID,USER_PROFILE_FILE, USER_NICKNAME, INPR_CERT, USER_ACCOUNT_ID,INPR_LIKE_COUNT, INPR_REGDATE,
	    SUBJECTS_TITLE, SUBJECTS_MAJOR_TITLE, REVIEW_COUNT,USER_BIRTH, INPR_FEE, USER_GENDER, USER_JOIN_DATE, INPR_VIEW_COUNT,
		INGI
FROM(
SELECT INPR_SEQ, INPR_ACCOUNT_ID,USER_PROFILE_FILE, USER_NICKNAME, INPR_CERT, USER_ACCOUNT_ID,INPR_LIKE_COUNT, INPR_REGDATE,
	    SUBJECTS_TITLE, SUBJECTS_MAJOR_TITLE, REVIEW_COUNT,USER_BIRTH, INPR_FEE, USER_GENDER, USER_JOIN_DATE, INPR_VIEW_COUNT,
		CASE WHEN NTILE(10) OVER (ORDER BY NVL(INPR_LIKE_COUNT, 0) DESC) = 1 THEN 'HOT' ELSE NULL END AS INGI,
		ROW_NUMBER() OVER (
		        ORDER BY 
		            <choose>
		                <when test="order == 'reg'">
		                    INPR_REGDATE DESC, INPR_SEQ DESC
		                </when>
		                <when test="order == 'view'">
		                    NVL(INPR_VIEW_COUNT, 0) DESC, INPR_SEQ DESC
		                </when>
		                <otherwise>
		                    NVL(INPR_LIKE_COUNT, 0) DESC, INPR_SEQ DESC
		                </otherwise>
		            </choose>
		) AS RN
	FROM (
	SELECT INPR_SEQ, INPR_ACCOUNT_ID, USER_PROFILE_FILE, INPR_CERT, USER_ACCOUNT_ID,
		    USER_NICKNAME, USER_BIRTH, INPR_FEE, USER_GENDER, INPR_REGDATE,
		    (SELECT JSON_ARRAYAGG(s.SUTA_TITLE) 
		     FROM JSON_TABLE(INPR_SUBJECTS, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_TITLE,
		    (SELECT JSON_ARRAYAGG(s.SUTA_TITLE)
		     FROM JSON_TABLE(INPR_SUBJECTS_MAJOR, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_MAJOR_TITLE,
		    COUNT(REVI_CLAS_ID) AS REVIEW_COUNT, INPR_LIKE_COUNT, INPR_VIEW_COUNT, USER_JOIN_DATE
	FROM INSTR_PROFILE 
	JOIN USER_PROFILE ON INPR_ACCOUNT_ID = USER_ACCOUNT_ID
	LEFT JOIN CLASS ON INPR_ACCOUNT_ID = CLAS_ACCOUNT_ID
	LEFT JOIN REVIEW ON CLAS_ID = REVI_CLAS_ID
	GROUP BY USER_PROFILE_FILE, USER_NICKNAME, INPR_FEE, INPR_REGDATE, USER_GENDER, INPR_SUBJECTS, INPR_SUBJECTS_MAJOR, INPR_LIKE_COUNT, INPR_ACCOUNT_ID, INPR_CERT, INPR_VIEW_COUNT, USER_ACCOUNT_ID, USER_JOIN_DATE,INPR_SEQ, USER_BIRTH
	 <choose>
		 <when test="order == 'reg'">
		   ORDER BY INPR_REGDATE DESC, INPR_SEQ DESC
		</when>
		<when test="order == 'view'">
		   ORDER BY NVL(INPR_VIEW_COUNT, 0) DESC, INPR_SEQ DESC
	    </when>
		<otherwise>
		   ORDER BY NVL(INPR_LIKE_COUNT, 0) DESC, INPR_SEQ DESC
		</otherwise>
	</choose>
	)
	<if test="inprIds != null">
		WHERE INPR_ACCOUNT_ID IN 
		<foreach collection="inprIds" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</if>
)
 WHERE RN BETWEEN #{start} AND #{end}
</select>




<select id="getAllInstrCount" resultType="Integer">
SELECT COUNT(*)
	FROM (
	SELECT INPR_SEQ, INPR_ACCOUNT_ID, USER_PROFILE_FILE, INPR_CERT, USER_ACCOUNT_ID,
		    USER_NICKNAME, USER_BIRTH, INPR_FEE, USER_GENDER,
		    (SELECT JSON_ARRAYAGG(s.SUTA_TITLE) 
		     FROM JSON_TABLE(INPR_SUBJECTS, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_TITLE,
		    (SELECT JSON_ARRAYAGG(s.SUTA_TITLE)
		     FROM JSON_TABLE(INPR_SUBJECTS_MAJOR, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
		     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_MAJOR_TITLE,
		    COUNT(REVI_CLAS_ID) AS REVIEW_COUNT, INPR_LIKE_COUNT, INPR_VIEW_COUNT, USER_JOIN_DATE
	FROM INSTR_PROFILE 
	JOIN USER_PROFILE ON INPR_ACCOUNT_ID = USER_ACCOUNT_ID
	LEFT JOIN CLASS ON INPR_ACCOUNT_ID = CLAS_ACCOUNT_ID
	LEFT JOIN REVIEW ON CLAS_ID = REVI_CLAS_ID
	GROUP BY USER_PROFILE_FILE, USER_NICKNAME, INPR_FEE, USER_GENDER, INPR_SUBJECTS, INPR_SUBJECTS_MAJOR, INPR_LIKE_COUNT, INPR_ACCOUNT_ID, INPR_CERT, INPR_VIEW_COUNT, USER_ACCOUNT_ID, USER_JOIN_DATE,INPR_SEQ, USER_BIRTH
	)
</select>

<update id="updateInstrLike">
	UPDATE INSTR_PROFILE SET INPR_LIKE = #{list}, INPR_LIKE_COUNT = #{count}
	<!-- ,INPR_REGDATE = CURRENT_DATE -->
	WHERE INPR_ACCOUNT_ID = #{inprAccountId}
</update>

<update id="updateInstrView">
	UPDATE INSTR_PROFILE SET INPR_VIEW = #{list}, INPR_VIEW_COUNT = #{count}
	<!-- ,INPR_REGDATE = CURRENT_DATE -->
	WHERE INPR_ACCOUNT_ID = #{inprAccountId}
</update>

<select id="getlikeViewUser" resultType="instrVo">
	SELECT INPR_LIKE, INPR_VIEW, NVL(INPR_LIKE_COUNT,0) AS INPR_LIKE_COUNT
		FROM INSTR_PROFILE
		WHERE INPR_ACCOUNT_ID = #{inprAccountId}
</select>


<select id="getOneInstrSimple" resultMap="instrMap">
	SELECT INPR_SEQ, INPR_ACCOUNT_ID, INPR_INTRO, USER_NICKNAME, USER_PROFILE_FILE, INPR_CERT, 
	CASE NVL(JSON_VALUE(INPR_LIKE, '$.${loginId}'), '0') WHEN '0' THEN '0' ELSE '1' END AS INPR_LIKE,
		(SELECT JSON_ARRAYAGG(s.SUTA_TITLE) 
	     FROM JSON_TABLE(INPR_SUBJECTS, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
	     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_TITLE,
	     INPR_SITE_YOUTUBE, INPR_SITE_WEB, INPR_SITE_MOBILE, INPR_LIKE_COUNT, INPR_VIEW_COUNT
	FROM INSTR_PROFILE JOIN USER_PROFILE
	ON INPR_ACCOUNT_ID = USER_ACCOUNT_ID
	WHERE INPR_SEQ = #{seq}
</select>

<select id="getOneInstrProfile" resultMap="instrMap">
	SELECT (SELECT JSON_ARRAYAGG(s.SUTA_TITLE)
	     FROM JSON_TABLE(INPR_SUBJECTS_MAJOR, '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt
	     JOIN SUBJECT_TAG s ON jt.subject_code = s.SUTA_CODE) AS SUBJECTS_MAJOR_TITLE,
	     INPR_FEE, INED_SCHOOL, INED_MAJOR, INED_MINOR,
	     TO_CHAR(INED_START, 'YYYY-MM-DD') AS INED_START, TO_CHAR(INED_END, 'YYYY-MM-DD') AS INED_END
	FROM INSTR_PROFILE JOIN INSTR_EDULEVEL
	ON INPR_SEQ = INED_INPR_SEQ
	WHERE INPR_SEQ = #{seq}
</select>

<select id="getOneInstrClass" resultMap="instrMap">
SELECT CLAS_ID, CLAS_TITLE, CLAS_LOCATION, CLAS_SUEOP_NALJJA, CLAS_SUGANGRYO,
		SUBJ_CODE
FROM(
SELECT CLAS_ID, CLAS_TITLE, CLAS_LOCATION, CLAS_SUEOP_NALJJA, CLAS_SUGANGRYO,
       (
           SELECT JSON_ARRAYAGG(st.SUTA_TITLE)
           FROM SUBJECT s
           INNER JOIN SUBJECT_TAG st ON st.SUTA_CODE IN (
               SELECT jt2.subject_code 
               FROM JSON_TABLE(s.SUBJ_CODE,
                               '$[*]' COLUMNS (subject_code VARCHAR2(400) PATH '$')) jt2
           )
           WHERE s.SUBJ_ID IN (
               SELECT jt1.subject_id 
               FROM JSON_TABLE(CLAS_SUBJECT_JEONGBO,
                               '$[*]' COLUMNS (subject_id VARCHAR2(400) PATH '$')) jt1
           )
       ) AS SUBJ_CODE,
       ROW_NUMBER() OVER(ORDER BY CLAS_SUEOP_NALJJA DESC) AS RN
FROM CLASS 
JOIN INSTR_PROFILE ON CLAS_ACCOUNT_ID = INPR_ACCOUNT_ID 
WHERE CLAS_STATUS = '종료'
AND INPR_ACCOUNT_ID =#{userAccountId}
)
WHERE RN BETWEEN #{start} AND #{end}
</select>

<select id="getCountClassCancel" resultType="Integer">
	SELECT COUNT(*)
	FROM CLASS JOIN INSTR_PROFILE
	ON CLAS_ACCOUNT_ID = INPR_ACCOUNT_ID
	WHERE CLAS_STATUS = '취소'
	AND INPR_ACCOUNT_ID = #{userAccountId}
</select>

<select id="getOneIntrReview" resultType="reviewVo">
    SELECT CLAS_TITLE, REVI_STUD_NAME, REVI_PRO, REVI_PREPARE, REVI_SEQ,
           AVG_SCORE,
           REVI_ABIL, REVI_SIGAN, REVI_DETAIL, TO_CHAR(REVI_REGDATE, 'YYYY-MM-DD') AS REVI_REGDATE
    FROM (
    	SELECT CLAS_TITLE, REVI_STUD_NAME, REVI_PRO, REVI_PREPARE, REVI_SEQ,
           AVG_SCORE,
           REVI_ABIL, REVI_SIGAN, REVI_DETAIL, REVI_REGDATE,
           ROW_NUMBER() OVER (
                   <choose>
                       <when test="order == 'desc'">
                           ORDER BY AVG_SCORE DESC, REVI_SEQ DESC
                       </when>
                       <when test="order == 'asc'">
                           ORDER BY AVG_SCORE ASC, REVI_SEQ DESC
                       </when>
                       <otherwise>
                           ORDER BY REVI_REGDATE DESC, REVI_SEQ DESC
                       </otherwise>
                   </choose>) AS RN
    FROM(       
	        SELECT CLAS_TITLE, 
	               REVI_STUD_NAME,
	               REVI_PRO, REVI_SEQ,
	               REVI_PREPARE,
	               TO_NUMBER(ROUND(((REVI_PRO + REVI_PREPARE + REVI_ABIL + REVI_SIGAN) / 4.0), 1)) AS AVG_SCORE,
	               REVI_ABIL,
	               REVI_SIGAN,
	               REVI_DETAIL,
	               REVI_REGDATE
	        FROM REVIEW JOIN CLASS ON CLAS_ID = REVI_CLAS_ID
	        WHERE CLAS_ACCOUNT_ID = #{userAccountId}
	    )
    )
    WHERE RN BETWEEN #{start} AND #{end}
 	<choose>
 		 <when test="order == 'desc'">
              ORDER BY AVG_SCORE DESC, REVI_SEQ DESC
         </when>
         <when test="order == 'asc'">
               ORDER BY AVG_SCORE ASC, REVI_SEQ DESC
         </when>
         <otherwise>
                ORDER BY REVI_REGDATE DESC, REVI_SEQ DESC
         </otherwise>
 	</choose>
</select>

<select id="classTotalCount" resultType="Integer">
SELECT COUNT(*)
FROM CLASS 
JOIN INSTR_PROFILE ON CLAS_ACCOUNT_ID = INPR_ACCOUNT_ID 
WHERE CLAS_STATUS = '종료'
AND INPR_ACCOUNT_ID =#{userAccountId}
</select>

<select id="reviewTotalCount" resultType="Integer">
   SELECT COUNT(*)
	  FROM REVIEW JOIN CLASS ON CLAS_ID = REVI_CLAS_ID
	  WHERE CLAS_ACCOUNT_ID = #{userAccountId}
</select>


</mapper>
