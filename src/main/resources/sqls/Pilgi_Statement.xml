<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdtd.tmtd.model.mapper.PilgiDaoImpl">

	<resultMap type="boardVo" id="boardMap">
		<result column="ID" property="id"/>
		<result column="ACCOUNT_ID" property="accountId"/>
		<result column="TITLE" property="title"/>
		<result column="CONTENT" property="content"/>
		<result column="REPLY_COUNT" property="replyCount"/>
		<result column="SUBJECT_CODE" property="subjectCode"/>
		<result column="LIKE_USER" property="likeUser"/>
		<result column="LIKE_COUNT" property="likeCount"/>
		<result column="VIEW_COUNT" property="viewCount"/>
		<result column="VIEW_GROUP" property="viewGroup"/>
		<result column="DOWNLOAD_GROUP" property="downloadGroup"/>
		<result column="REGDATE" property="regdate"/>
		<result column="UPDATE" property="update"/>
		<result column="STATE" property="state"/>
		
		<collection property="fileList" resultMap="fileMap"></collection>
	</resultMap>
	<resultMap type="fileVo" id="fileMap">
		<result column="FILE_ORIGIN_NAME" property="fileOriginName"/>
		<result column="FILE_SAVE_NAME" property="fileSaveName"/>
	</resultMap>

	<!-- 필기 조회가능한 게시글 개수 -->
	<select id="getPilgiCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM (SELECT PIBO_ID, PIBO_CLAS_ID
					FROM PILGI_BOARD
					WHERE PIBO_STATE IN ('N', 'P')
						AND PIBO_VIEW_GROUP = 'C'
						AND PIBO_CLAS_ID IN (SELECT CLCH_CLAS_ID
												FROM CLASS_CHAMYEOJA
												WHERE CLCH_ACCOUNT_ID=#{accountId})
				UNION ALL
				SELECT PIBO_ID, PIBO_CLAS_ID
					FROM PILGI_BOARD
					WHERE PIBO_STATE IN ('N', 'P')
						AND PIBO_VIEW_GROUP = 'A')
		<if test="boardId != null">
			WHERE PIBO_ID IN
			<foreach collection="boardId"  item="id" open="(" separator="," close=")"> <!-- item은 값만 담는 변수 -->
				#{id}
			</foreach>
		</if>
	</select>
	
	<!-- 필기 목록 조회(정렬) -->
	<select id="getPilgiList" resultType="boardVo">
		SELECT ID, ACCOUNT_ID , TITLE, REPLY_COUNT, CLAS_SUBJECT_JEONGBO AS SUBJECT_CODE, LIKE_USER, LIKE_COUNT, VIEW_COUNT, 
			CASE TO_CHAR(PIBO_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(PIBO_REGDATE, 'HH24:MI') ELSE TO_CHAR(PIBO_REGDATE, 'yyyy. mm. dd') END AS REGDATE
			FROM (SELECT ID, ACCOUNT_ID , TITLE, REPLY_COUNT, PIBO_CLAS_ID, LIKE_USER, LIKE_COUNT, VIEW_COUNT, PIBO_REGDATE,PIBO_STATE,
					<choose>
						<when test='"like".equals(orderBy)'>
							ROW_NUMBER() OVER(ORDER BY LIKE_COUNT DESC, ID DESC) rn					
						</when>
						<when test='"view".equals(orderBy)'>
							ROW_NUMBER() OVER(ORDER BY VIEW_COUNT DESC, ID DESC) rn											
						</when>
						<when test='"reply".equals(orderBy)'>
							ROW_NUMBER() OVER(ORDER BY REPLY_COUNT DESC, ID DESC) rn																	
						</when>
						<otherwise>
							ROW_NUMBER() OVER(ORDER BY PIBO_REGDATE DESC, ID DESC) rn					
						</otherwise>
					</choose>
					FROM (SELECT PIBO_ID AS ID, USER_NICKNAME AS ACCOUNT_ID , CLAS_TITLE || ' [' || PIBO_REPLY_COUNT || ']' AS TITLE, 
								PIBO_REPLY_COUNT AS REPLY_COUNT, PIBO_CLAS_ID, 
								CASE NVL(JSON_VALUE(PILGI_BOARD.PIBO_LIKE_USER,'$.${accountId}'), '0') WHEN '0' THEN '0' ELSE '1' END AS LIKE_USER, 
								PIBO_LIKE_COUNT AS LIKE_COUNT, PIBO_VIEW_COUNT AS VIEW_COUNT, 
								PIBO_REGDATE,
								PIBO_STATE
							FROM PILGI_BOARD LEFT JOIN USER_PROFILE 
							ON PIBO_WRITER_ID = USER_ACCOUNT_ID 
							LEFT JOIN CLASS
							ON PIBO_CLAS_ID = CLAS_ID
							WHERE PIBO_STATE IN ('N', 'P')
								AND PIBO_VIEW_GROUP = 'C'
								AND PIBO_CLAS_ID IN (SELECT CLCH_CLAS_ID
														FROM CLASS_CHAMYEOJA
														WHERE CLCH_ACCOUNT_ID=#{accountId})
						UNION ALL
						SELECT PIBO_ID AS ID, USER_NICKNAME AS WRITER_ID , CLAS_TITLE || ' [' || PIBO_REPLY_COUNT || ']' AS TITLE, 
								PIBO_REPLY_COUNT AS REPLY_COUNT, PIBO_CLAS_ID, 
								CASE NVL(JSON_VALUE(PILGI_BOARD.PIBO_LIKE_USER,'$.${accountId}'), '0') WHEN '0' THEN '0' ELSE '1' END AS LIKE_USER, 
								PIBO_LIKE_COUNT AS LIKE_COUNT, PIBO_VIEW_COUNT AS VIEW_COUNT, 
								PIBO_REGDATE,
								PIBO_STATE
							FROM PILGI_BOARD LEFT JOIN USER_PROFILE 
							ON PIBO_WRITER_ID = USER_ACCOUNT_ID 
							LEFT JOIN CLASS
							ON PIBO_CLAS_ID = CLAS_ID
							WHERE PIBO_STATE IN ('N', 'P')
								AND PIBO_VIEW_GROUP = 'A')
			<if test="boardId != null">
				WHERE ID IN
				<foreach collection="boardId"  item="id" open="(" separator="," close=")"> <!-- item은 값만 담는 변수 -->
					#{id}
				</foreach>
			</if>
			)
			LEFT JOIN (SELECT CLAS_ID, REPLACE((SELECT JSON_ARRAYAGG(s.SUBJ_CODE) 
								     FROM JSON_TABLE(CLAS_SUBJECT_JEONGBO, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt 
								     JOIN (SELECT SUBJ_ID, SUBSTR(SUBJ_CODE, 3, LENGTH(SUBJ_CODE)-4) SUBJ_CODE
											FROM (SELECT SUBJ_ID, (SELECT JSON_ARRAYAGG(s1.SUTA_TITLE) 
																     FROM JSON_TABLE(SUBJ_CODE, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt1 
																     JOIN SUBJECT_TAG s1 
																     ON jt1.SUBJECT_CODE = s1.SUTA_CODE) AS SUBJ_CODE
													FROM SUBJECT)) s 
								     ON jt.SUBJECT_CODE = s.SUBJ_ID), '\', '') AS CLAS_SUBJECT_JEONGBO
					FROM CLASS)
			ON PIBO_CLAS_ID = CLAS_ID
			WHERE RN BETWEEN #{start} AND #{end}
			ORDER BY rn
	</select>
	
	<!-- 필기 상세 조회 -->
	<select id="getPilgiDetail" resultMap="boardMap">
		SELECT PIBO_ID AS ID, USER_NICKNAME AS ACCOUNT_ID , CLAS_TITLE || ' [' || PIBO_REPLY_COUNT || ']' AS TITLE, 
				PIBO_CONTENT AS CONTENT, PIBO_REPLY_COUNT AS REPLY_COUNT, c2.CLAS_SUBJECT_JEONGBO AS SUBJECT_CODE, 
				CASE NVL(JSON_VALUE(PILGI_BOARD.PIBO_LIKE_USER,'$.${accountId}'), '0') WHEN '0' THEN '0' ELSE '1' END AS LIKE_USER, 
				PIBO_LIKE_COUNT AS LIKE_COUNT, PIBO_VIEW_COUNT AS VIEW_COUNT, 
				CASE WHEN (PIBO_DOWNLOAD_GROUP='C'
							AND NOT PIBO_CLAS_ID IN (SELECT CLCH_CLAS_ID
														FROM CLASS_CHAMYEOJA
														WHERE CLCH_ACCOUNT_ID=#{accountId}
															AND CLCH_STATUS='C'))
					OR (PIBO_DOWNLOAD_GROUP='I'
							AND NOT PIBO_WRITER_ID=#{accountId})
					THEN '0' ELSE '1' END AS DOWNLOAD_GROUP,
				CASE TO_CHAR(PIBO_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(PIBO_REGDATE, 'HH24:MI')ELSE TO_CHAR(PIBO_REGDATE, 'yyyy. mm. dd') END AS REGDATE, 
				CASE TO_CHAR(PIBO_UPDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(PIBO_UPDATE, 'HH24:MI')ELSE TO_CHAR(PIBO_UPDATE, 'yyyy. mm. dd') END AS "UPDATE",
				PIBO_STATE AS STATE,
				FILE_ORIGIN_NAME, FILE_SAVE_NAME
			FROM PILGI_BOARD LEFT JOIN USER_PROFILE 
			ON PIBO_WRITER_ID = USER_ACCOUNT_ID 
			LEFT JOIN CLASS c1
			ON PIBO_CLAS_ID = c1.CLAS_ID
			LEFT JOIN (SELECT CLAS_ID, REPLACE((SELECT JSON_ARRAYAGG(s.SUBJ_CODE) 
								     FROM JSON_TABLE(CLAS_SUBJECT_JEONGBO, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt 
								     JOIN (SELECT SUBJ_ID, SUBSTR(SUBJ_CODE, 3, LENGTH(SUBJ_CODE)-4) SUBJ_CODE
											FROM (SELECT SUBJ_ID, (SELECT JSON_ARRAYAGG(s1.SUTA_TITLE) 
																     FROM JSON_TABLE(SUBJ_CODE, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt1 
																     JOIN SUBJECT_TAG s1 
																     ON jt1.SUBJECT_CODE = s1.SUTA_CODE) AS SUBJ_CODE
													FROM SUBJECT)) s 
								     ON jt.SUBJECT_CODE = s.SUBJ_ID), '\', '') AS CLAS_SUBJECT_JEONGBO
					FROM CLASS) c2
			ON PIBO_CLAS_ID = c2.CLAS_ID
			LEFT JOIN "FILE"
			ON PIBO_ID = FILE_REF_PK
			WHERE PIBO_ID=#{id}
	</select>
	
	<!-- 연관 필기 목록 조회 -->
	<select id="getYeongwanList" resultType="boardVo">
		SELECT ID, ACCOUNT_ID
			FROM (SELECT USER_NICKNAME || ' 님의 필기 [' || PIBO_REPLY_COUNT || ']' AS ACCOUNT_ID, PIBO_ID AS ID
					FROM (SELECT PIBO_ID, PIBO_WRITER_ID, PIBO_CLAS_ID, PIBO_REPLY_COUNT, PIBO_VIEW_GROUP, PIBO_STATE
								FROM PILGI_BOARD
								WHERE PIBO_VIEW_GROUP = 'A'
							UNION
							SELECT PIBO_ID, PIBO_WRITER_ID, PIBO_CLAS_ID, PIBO_REPLY_COUNT, PIBO_VIEW_GROUP, PIBO_STATE
								FROM PILGI_BOARD
								WHERE PIBO_VIEW_GROUP = 'C'
									AND PIBO_CLAS_ID IN (SELECT CLCH_CLAS_ID
															FROM CLASS_CHAMYEOJA
															WHERE CLCH_ACCOUNT_ID=#{accountId}))	
					JOIN USER_PROFILE
					ON PIBO_WRITER_ID = USER_ACCOUNT_ID
					WHERE PIBO_STATE = 'N'
						AND NOT PIBO_WRITER_ID = #{accountId}
						AND NOT PIBO_ID=#{id}
						AND PIBO_CLAS_ID=(SELECT PIBO_CLAS_ID
											FROM PILGI_BOARD
											WHERE PIBO_ID=#{id})
					ORDER BY PIBO_ID DESC)
			<![CDATA[WHERE ROWNUM < 6]]>				
	</select>
	
	<!-- 필기 좋아요 조회 -->
	<select id="getPilgiLikeUser" resultType="java.lang.String">
		SELECT PIBO_LIKE_USER AS LIKE_USER
			FROM PILGI_BOARD
			WHERE PIBO_ID=#{id}
	</select>
	
	<!-- 필기 좋아요 업데이트 -->
	<update id="updatePilgiLikeUser">
		UPDATE PILGI_BOARD SET PIBO_LIKE_USER = #{likeUser}, PIBO_LIKE_COUNT = #{likeCount}
			WHERE PIBO_ID=#{id}
	</update>
	
	<!-- 필기 조회수 조회 -->
	<select id="getPilgiViewUser" resultType="java.lang.String">
		SELECT PIBO_VIEW_USER AS VIEW_USER
			FROM PILGI_BOARD
			WHERE PIBO_ID=#{id}
	</select>
	
	<!-- 필기 조회수 업데이트 -->
	<update id="updatePilgiViewUser">
		UPDATE PILGI_BOARD SET PIBO_VIEW_USER = #{viewUser}, PIBO_VIEW_COUNT = #{viewCount}
			WHERE PIBO_ID=#{id}
	</update>
		
	<!-- 필기 작성시 기본 정보 조회 -->
	<select id="getPilgiClassDetail" resultType="classVo">
		SELECT c1.CLAS_ID AS CLAS_ID,c1.CLAS_TITLE AS CLAS_TITLE, c2.CLAS_SUBJECT_JEONGBO AS CLAS_SUBJECT_JEONGBO  
			FROM CLASS c1 JOIN (SELECT CLAS_ID, REPLACE((SELECT JSON_ARRAYAGG(s.SUBJ_CODE) 
												     FROM JSON_TABLE(CLAS_SUBJECT_JEONGBO, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt 
												     JOIN (SELECT SUBJ_ID, SUBSTR(SUBJ_CODE, 3, LENGTH(SUBJ_CODE)-4) SUBJ_CODE
															FROM (SELECT SUBJ_ID, (SELECT JSON_ARRAYAGG(s1.SUTA_TITLE) 
																				     FROM JSON_TABLE(SUBJ_CODE, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt1 
																				     JOIN SUBJECT_TAG s1 
																				     ON jt1.SUBJECT_CODE = s1.SUTA_CODE) AS SUBJ_CODE
																	FROM SUBJECT)) s 
												     ON jt.SUBJECT_CODE = s.SUBJ_ID), '\', '') AS CLAS_SUBJECT_JEONGBO
								FROM CLASS) c2
			ON c1.CLAS_ID = c2.CLAS_ID
			WHERE c1.CLAS_ID=#{clasId}
	</select>
	
	<!-- 필기 작성 -->
	<insert id="insertPilgi">
		INSERT INTO PILGI_BOARD(PIBO_ID, PIBO_WRITER_ID, PIBO_CLAS_ID, 
						PIBO_CONTENT, PIBO_VIEW_GROUP, PIBO_DOWNLOAD_GROUP)
			VALUES((SELECT 'PI'||TO_CHAR(CURRENT_DATE,'yyyymmdd')||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PIBO_ID,11))),0)+1,4,'0')
						FROM PILGI_BOARD
						WHERE SUBSTR(PIBO_ID,1,10)='PI'||TO_CHAR(CURRENT_DATE,'yyyymmdd')), #{accountId}, #{clasId}, 
					#{content}, #{viewGroup}, #{downloadGroup})
		<selectKey keyProperty="id" resultType="java.lang.String" order="AFTER">
			SELECT 'PI'||TO_CHAR(CURRENT_DATE,'yyyymmdd')||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PIBO_ID,11))),0),4,'0') AS ID
				FROM PILGI_BOARD
				WHERE SUBSTR(PIBO_ID,1,10)='PI'||TO_CHAR(CURRENT_DATE,'yyyymmdd')
		</selectKey>
	</insert>
	
	<!-- 필기 작성 여부 변경 -->
	<update id="updateClchPilgiState">
		UPDATE CLASS_CHAMYEOJA SET CLCH_PILGI_STATUS = #{state}
			WHERE CLCH_ACCOUNT_ID = #{accountId}
				AND CLCH_CLAS_ID = (SELECT PIBO_CLAS_ID
										FROM PILGI_BOARD
										WHERE PIBO_ID=#{id})
	</update>
	
	<!-- 필기 수정 데이터 조회 -->
	<select id="getPilgiUpdateData" resultMap="boardMap">
		SELECT c1.CLAS_TITLE AS TITLE, PIBO_CONTENT AS CONTENT, c2.CLAS_SUBJECT_JEONGBO AS SUBJECT_CODE, 
				PIBO_VIEW_GROUP AS VIEW_GROUP, PIBO_DOWNLOAD_GROUP AS DOWNLOAD_GROUP, FILE_ORIGIN_NAME, FILE_SAVE_NAME
			FROM PILGI_BOARD LEFT JOIN CLASS c1
			ON PIBO_CLAS_ID = c1.CLAS_ID
			LEFT JOIN (SELECT CLAS_ID, REPLACE((SELECT JSON_ARRAYAGG(s.SUBJ_CODE) 
								     FROM JSON_TABLE(CLAS_SUBJECT_JEONGBO, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt 
								     JOIN (SELECT SUBJ_ID, SUBSTR(SUBJ_CODE, 3, LENGTH(SUBJ_CODE)-4) SUBJ_CODE
											FROM (SELECT SUBJ_ID, (SELECT JSON_ARRAYAGG(s1.SUTA_TITLE) 
																     FROM JSON_TABLE(SUBJ_CODE, '$[*]' COLUMNS (SUBJECT_CODE VARCHAR2(400) PATH '$')) jt1 
																     JOIN SUBJECT_TAG s1 
																     ON jt1.SUBJECT_CODE = s1.SUTA_CODE) AS SUBJ_CODE
													FROM SUBJECT)) s 
								     ON jt.SUBJECT_CODE = s.SUBJ_ID), '\', '') AS CLAS_SUBJECT_JEONGBO
					FROM CLASS) c2
			ON PIBO_CLAS_ID = c2.CLAS_ID
			LEFT JOIN "FILE"
			ON PIBO_ID = FILE_REF_PK
			WHERE PIBO_ID=#{id}
	</select>
	
	<!-- 필기 수정 -->
	<update id="updatePilgi">
		UPDATE PILGI_BOARD SET PIBO_CONTENT=#{content}, PIBO_VIEW_GROUP=#{viewGroup}, PIBO_DOWNLOAD_GROUP=#{downloadGroup}, PIBO_UPDATE=CURRENT_DATE
			WHERE PIBO_ID=#{id}
	</update>
	
	<!-- 필기 수정시 파일 삭제 -->
	<delete id="deletePilgiFile">
		DELETE FROM "FILE"
			WHERE FILE_SAVE_NAME=#{save}
	</delete>
	
	<!-- 필기 임시 삭제 및 복원 -->
	<update id="updatePilgiState">
		UPDATE PILGI_BOARD SET PIBO_STATE = #{state}
			WHERE PIBO_ID=#{id}
	</update>
		
	<!-- 필기 완전 삭제 -->
	<delete id="deletePilgi">
		DELETE PILGI_BOARD
			WHERE PIBO_ID=#{id}
	</delete>
	
</mapper>
