<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdtd.tmtd.model.mapper.ReplyDaoImpl">
	<!-- 게시글의 총 댓글 수 조회 -->
	<select id="getReplyCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM (SELECT CORE_SEQ,CORE_BOARD_ID AS BOARD_ID, CORE_STEP AS "STEP"
					FROM COMMUNITY_REPLY
				UNION ALL
				SELECT SACR_SEQ, SACR_BOARD_ID AS BOARD_ID, SACR_STEP AS "STEP"
					FROM SAKJE_COMMUNITY_REPLY)
			WHERE BOARD_ID=#{boardId}
			AND "STEP"=0
	</select>
	
	<!-- 게시글의 ROOT 댓글 목록 조회 -->
	<select id="getRootReplyList" resultType="replyVo">
		SELECT SEQ, WRITER_ID, CONTENT , ROOT_SEQ, STEP, CHAETAEK, REGDATE,"UPDATE", STATE
			FROM (SELECT SEQ, WRITER_ID, CONTENT , ROOT_SEQ, STEP, CHAETAEK, REGDATE,"UPDATE",STATE,
						ROW_NUMBER() OVER(ORDER BY CHAETAEK DESC, ROOT_SEQ, STEP) rn
						FROM (SELECT CORE_SEQ AS SEQ,
									USER_NICKNAME AS WRITER_ID, CORE_CONTENT AS CONTENT, 
									CASE (SELECT CORE_CHAETAEK 
										FROM COMMUNITY_REPLY
										WHERE CORE_SEQ=(SELECT CORE_ROOT_SEQ
															FROM COMMUNITY_REPLY c1
															WHERE c1.CORE_SEQ=c2.CORE_SEQ)) WHEN 'Y' THEN 0 ELSE CORE_ROOT_SEQ END AS ROOT_SEQ, 
									CORE_STEP AS STEP, CORE_CHAETAEK AS CHAETAEK, CORE_STATE AS STATE,
									CASE TO_CHAR(CORE_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(CORE_REGDATE, 'HH24:MI')ELSE TO_CHAR(CORE_REGDATE, 'yyyy. mm. dd') END AS REGDATE,
									CASE TO_CHAR(CORE_UPDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(CORE_UPDATE, 'HH24:MI')ELSE TO_CHAR(CORE_UPDATE, 'yyyy. mm. dd') END AS "UPDATE" 
								FROM COMMUNITY_REPLY c2 JOIN USER_PROFILE
								ON CORE_WRITER_ID = USER_ACCOUNT_ID
								WHERE CORE_BOARD_ID = #{boardId}
									AND CORE_STEP=0
							UNION ALL
							SELECT SACR_SEQ AS SEQ, 'DEL@' AS WRITER_ID , TO_CLOB('작성자에 의해 삭제되었습니다.') AS CONTENT,
									CASE (SELECT CORE_CHAETAEK 
										FROM COMMUNITY_REPLY
										WHERE CORE_SEQ=(SELECT SACR_ROOT_SEQ
															FROM SAKJE_COMMUNITY_REPLY s1
															WHERE s1.SACR_SEQ=s2.SACR_SEQ)) WHEN 'Y' THEN 0 ELSE SACR_ROOT_SEQ END AS ROOT_SEQ, 
									SACR_STEP AS STEP, 'N' AS CHAETAEK, 'Y' AS STATE,
									CASE TO_CHAR(SACR_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(SACR_REGDATE, 'HH24:MI')ELSE TO_CHAR(SACR_REGDATE, 'yyyy. mm. dd') END AS REGDATE,
									CASE TO_CHAR(SACR_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(SACR_REGDATE, 'HH24:MI')ELSE TO_CHAR(SACR_REGDATE, 'yyyy. mm. dd') END AS "UPDATE"
								FROM SAKJE_COMMUNITY_REPLY s2
								WHERE SACR_BOARD_ID = #{boardId}
									AND SACR_STEP=0))
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 게시글의 대댓글 목록 조회 -->
	<select id="getReReplyList" resultType="replyVo">
		SELECT SEQ, WRITER_ID, CONTENT , ROOT_SEQ, STEP, CHAETAEK, REGDATE,"UPDATE",STATE
			FROM (SELECT CORE_SEQ AS SEQ, USER_NICKNAME AS WRITER_ID, CORE_CONTENT AS CONTENT, 
						CASE (SELECT CORE_CHAETAEK 
							FROM COMMUNITY_REPLY
							WHERE CORE_SEQ=(SELECT CORE_ROOT_SEQ
												FROM COMMUNITY_REPLY c1
												WHERE c1.CORE_SEQ=c2.CORE_SEQ)) WHEN 'Y' THEN 0 ELSE CORE_ROOT_SEQ END AS ROOT_SEQ, 
						CORE_STEP AS STEP, CORE_CHAETAEK AS CHAETAEK, CORE_STATE AS STATE,
						CASE TO_CHAR(CORE_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(CORE_REGDATE, 'HH24:MI')ELSE TO_CHAR(CORE_REGDATE, 'yyyy. mm. dd') END AS REGDATE,
						CASE TO_CHAR(CORE_UPDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(CORE_UPDATE, 'HH24:MI')ELSE TO_CHAR(CORE_UPDATE, 'yyyy. mm. dd') END AS "UPDATE" 
					FROM COMMUNITY_REPLY c2 JOIN USER_PROFILE
					ON CORE_WRITER_ID = USER_ACCOUNT_ID
					WHERE CORE_BOARD_ID = #{boardId}
						AND NOT CORE_STEP=0
				UNION ALL
				SELECT SACR_SEQ AS SEQ, 'DEL@' AS WRITER_ID , TO_CLOB('작성자에 의해 삭제되었습니다.') AS CONTENT,
						CASE (SELECT CORE_CHAETAEK 
							FROM COMMUNITY_REPLY
							WHERE CORE_SEQ=(SELECT SACR_ROOT_SEQ
												FROM SAKJE_COMMUNITY_REPLY s1
												WHERE s1.SACR_SEQ=s2.SACR_SEQ)) WHEN 'Y' THEN 0 ELSE SACR_ROOT_SEQ END AS ROOT_SEQ, 
						SACR_STEP AS STEP, 'N' AS CHAETAEK, 'Y' AS STATE,
						CASE TO_CHAR(SACR_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(SACR_REGDATE, 'HH24:MI')ELSE TO_CHAR(SACR_REGDATE, 'yyyy. mm. dd') END AS REGDATE,
						CASE TO_CHAR(SACR_REGDATE, 'yyyymmdd') WHEN TO_CHAR(CURRENT_DATE, 'yyyymmdd') THEN TO_CHAR(SACR_REGDATE, 'HH24:MI')ELSE TO_CHAR(SACR_REGDATE, 'yyyy. mm. dd') END AS "UPDATE"
					FROM SAKJE_COMMUNITY_REPLY s2
					WHERE SACR_BOARD_ID = #{boardId}
						AND NOT SACR_STEP=0)
			WHERE ROOT_SEQ IN
				<foreach collection="rootSeq"  item="seq" open="(" separator="," close=")"> <!-- item은 값만 담는 변수 -->
					#{seq}
				</foreach>
			ORDER BY ROOT_SEQ, STEP
	</select>
	
	<!-- TDF019	TDW55441	ROOT 댓글 작성 -->
	<insert id="insertRootReply">
		INSERT INTO COMMUNITY_REPLY(CORE_SEQ, CORE_BOARD_ID, CORE_WRITER_ID, CORE_CONTENT, 
								CORE_ROOT_SEQ, 
								CORE_STEP)
					VALUES(COMMUNITY_REPLY_SEQ.NEXTVAL, #{boardId}, #{writerId}, #{content}, 
							COMMUNITY_REPLY_SEQ.CURRVAL, 0)
	</insert>
	
	<!-- ROOT 댓글 개수 조회 -->
	<select id="getRootReplyCount" resultType="java.lang.Integer">
		<if test="board=='pilgi'">
			SELECT PIBO_REPLY_COUNT
				FROM PILGI_BOARD
				WHERE PIBO_ID=#{boardId}
		</if>
		<if test="board=='jilmun'">
			SELECT JIBO_REPLY_COUNT
				FROM JILMUN_BOARD
				WHERE JIBO_ID=#{boardId}
		</if>
		<if test="board=='jayu'">
			SELECT JABO_REPLY_COUNT
				FROM JAYU_BOARD
				WHERE JABO_ID=#{boardId}
		</if>
	</select>
	
	<!-- 게시판 root 댓글 개수 수정 -->
	<update id="updateBoardReplyCount">
		<if test="board=='pilgi'">
			UPDATE PILGI_BOARD SET PIBO_REPLY_COUNT =#{count}
				WHERE PIBO_ID=#{boardId}
		</if>
		<if test="board=='jilmun'">
			UPDATE JILMUN_BOARD SET JIBO_REPLY_COUNT =#{count}
				WHERE JIBO_ID=#{boardId}
		</if>
		<if test="board=='jayu'">
			UPDATE JAYU_BOARD SET JABO_REPLY_COUNT =#{count}
				WHERE JABO_ID=#{boardId}
		</if>
	</update>
	
	<!-- 대댓글 작성 -->
	<insert id="insertReReply">
		INSERT INTO COMMUNITY_REPLY(CORE_SEQ, CORE_BOARD_ID, CORE_WRITER_ID, CORE_CONTENT, 
								CORE_ROOT_SEQ, 
								CORE_STEP)
					VALUES(COMMUNITY_REPLY_SEQ.NEXTVAL, #{boardId}, #{writerId}, #{content},  
							#{rootSeq}, (SELECT MAX(STEP)+1
											FROM (SELECT CORE_STEP AS "STEP"
														FROM COMMUNITY_REPLY
														WHERE CORE_ROOT_SEQ = #{rootSeq}
													UNION
													SELECT SACR_STEP AS "STEP"
														FROM SAKJE_COMMUNITY_REPLY
														WHERE SACR_ROOT_SEQ = #{rootSeq})))
	</insert>
	
	<!-- 댓글 수정 데이터 조회 -->
	<select id="getUpdateContent" resultType="java.lang.String">
		SELECT CORE_CONTENT AS CONTENT
			FROM COMMUNITY_REPLY
			WHERE CORE_SEQ=#{seq}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="updateReply">
		UPDATE COMMUNITY_REPLY SET CORE_CONTENT = #{content}, CORE_UPDATE = CURRENT_DATE
			WHERE CORE_SEQ=#{seq}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE FROM COMMUNITY_REPLY
			WHERE CORE_SEQ=#{seq}
	</delete>
	
	<!-- 삭제 댓글 정보 조회 -->
	<select id="getReplyDetail" resultType="replyVo">
		SELECT CORE_SEQ AS SEQ, CORE_BOARD_ID AS BOARD_ID, CORE_ROOT_SEQ AS ROOT_SEQ, CORE_STEP AS "STEP"
			FROM COMMUNITY_REPLY
			WHERE CORE_SEQ=#{seq}
	</select>
	
	<!-- 삭제 댓글 입력 -->
	<insert id="insertSakje">
		INSERT INTO SAKJE_COMMUNITY_REPLY(SACR_SEQ, SACR_BOARD_ID, SACR_ROOT_SEQ, SACR_STEP)
						VALUES(#{seq}, #{boardId}, #{rootSeq}, #{step})
	</insert>
				
	<!-- 댓글 채택 -->
	<update id="updateChaetaekY">
		UPDATE COMMUNITY_REPLY SET CORE_CHAETAEK ='Y'
			WHERE CORE_SEQ =#{seq}
	</update>
	
	<!-- 채택 보드 업데이트 -->
	<update id="updateChaetaekBoard">
		UPDATE JILMUN_BOARD SET JIBO_CHAETAEK='Y'
			WHERE JIBO_ID=#{boardId}
	</update>
</mapper>
