<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdtd.tmtd.model.mapper.CommUserDaoImpl">

	<resultMap type="userProfileVo" id="userProfileMap">
		<result column="USER_ACCOUNT_ID" property="userAccountId" />
		<result column="USER_EMAIL" property="userEmail" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_NICKNAME" property="userNickname" />
		<result column="USER_AUTH" property="userAuth" />
		<result column="USER_PHONE_NUMBER" property="userPhoneNumber" />
		<result column="USER_REFRESH_TOKEN" property="userRefreshToken" />
		<result column="USER_AUTO_LOGIN_TOKEN" property="userAutoLoginToken" />
		<result column="USER_GENDER" property="userGender" />
		<result column="USER_SITE" property="userSite" />
		<result column="USER_BIRTH" property="userBirth" />
		<result column="USER_PROFILE_FILE" property="userProfileFile" />
		<result column="USER_DELFLAG" property="userDelflag" />
		<result column="USER_CHADAN_REGIST_DATE" property="userChadanRegistDate" />
		<result column="USER_CHADAN_COUNT" property="userChadanCount" />
	</resultMap>
	
	<update id="updateUserPassword" parameterType="java.util.Map">
		UPDATE USER_PROFILE SET USER_PASSWORD=#{userPassword}
			<choose>
				<when test="tokenValue == 'mypage'">
					WHERE USER_ACCOUNT_ID =#{userAccountId}
				</when>
				<otherwise>
					WHERE USER_PASSWORD_RESET_TOKEN=#{tokenValue}
				</otherwise>
			</choose>
	</update>
	
	<update id="deleteResetPwToken">
		UPDATE USER_PROFILE SET USER_PASSWORD_RESET_TOKEN = null 
		WHERE USER_PASSWORD_RESET_TOKEN = #{tokenValue}
	</update>
	
	<update id="updateResetPwToken">
		UPDATE USER_PROFILE SET USER_PASSWORD_RESET_TOKEN =#{tokenValue} 
			WHERE USER_EMAIL = #{userEmail}
	</update>
	
	<update id="updateUserInfo">
		UPDATE 
			<choose>
				<when test='userSite == "T"'>
					USER_PROFILE
				</when>
				<when test='userSite == "N"'>
					NAVER_USER_PROFILE
				</when>
				<when test='userSite == "K"'>
					KAKAO_USER_PROFILE
				</when>
				<when test='userSite == "G"'>
					GOOGLE_USER_PROFILE
				</when>
			</choose>
			SET
			<choose>
				<when test='changeNickName != null'>
					USER_NICKNAME = #{changeNickName}
				</when>
				<when test='changeProfile != null'>
					USER_PROFILE_FILE = #{changeProfile}				
				</when>
			</choose>
 			WHERE USER_ACCOUNT_ID =#{userAccountId}
	</update>
	
	<update id="updateTime" >
			UPDATE 
				<choose>
					<when test='userSite == "T"'>
						USER_PROFILE
					</when>
					<when test='userSite == "N"'>
						NAVER_USER_PROFILE
					</when>
					<when test='userSite == "K"'>
						KAKAO_USER_PROFILE
					</when>
					<when test='userSite == "G"'>
						GOOGLE_USER_PROFILE
					</when>
				</choose>
				SET USER_LAST_ACCESS_DATE = CURRENT_DATE
 				WHERE USER_ACCOUNT_ID = #{userAccountId}
	</update>
	
	<!-- NOTE [회원관리 : 로그인 정보를 가져오는 쿼리문] -->
	<select id="commLogin" resultMap="userProfileMap">
		SELECT USER_ACCOUNT_ID , USER_EMAIL, USER_NAME, USER_NICKNAME,
		USER_AUTH, USER_PHONE_NUMBER, USER_AUTO_LOGIN_TOKEN, USER_GENDER,
		USER_SITE,USER_BIRTH,USER_DELFLAG,USER_CHADAN_REGIST_DATE, USER_CHADAN_COUNT,
		USER_PROFILE_FILE
		FROM USER_PROFILE
		WHERE USER_EMAIL=#{userEmail}
		AND USER_PASSWORD=#{userPassword}
	</select>
	
	<!-- NOTE [회원관리 : 로그인 정보를 가져오는 쿼리문] -->
	<select id="autoLogin" resultMap="userProfileMap">
		SELECT USER_ACCOUNT_ID , USER_EMAIL, USER_NAME, USER_NICKNAME,
		USER_AUTH, USER_PHONE_NUMBER, USER_AUTO_LOGIN_TOKEN, USER_GENDER,
		USER_SITE,USER_BIRTH,USER_DELFLAG,USER_CHADAN_REGIST_DATE, USER_CHADAN_COUNT,
		USER_PROFILE_FILE
		FROM USER_PROFILE
		WHERE USER_AUTO_LOGIN_TOKEN=#{userAutoLoginToken}
	</select>
	
	<!-- NOTE [회원관리 : 로그인 정보가 없을 시 해당 이메일의 차단횟수를 증가해주는 쿼리문] -->
	
	<update id="updatechadanCnt">
		UPDATE USER_PROFILE SET USER_CHADAN_COUNT = USER_CHADAN_COUNT +1
 			WHERE USER_EMAIL = #{userEmail}
	</update>
	
	<select id="checkUserChadanCount" resultType="java.lang.Integer">
		SELECT USER_CHADAN_COUNT FROM USER_PROFILE up 
 			WHERE USER_EMAIL =#{userEmail}
	</select>
	
	<!-- 차단 시간  설정-->	
	<update id="updateUserChadanDate">
		UPDATE USER_PROFILE SET USER_CHADAN_REGIST_DATE = CURRENT_DATE
 				WHERE USER_EMAIL =#{userEmail}
	</update>
	
	<select id="checkUserChadanDate" resultType="java.lang.String">
		SELECT 
			 CASE WHEN ROUND((USER_CHADAN_REGIST_DATE- CURRENT_DATE+(10/1440))*1440)<![CDATA[<]]>10 THEN 782898 ELSE ROUND((CURRENT_DATE-USER_CHADAN_REGIST_DATE+(10/1440)) * 1440) END
			 FROM USER_PROFILE up
			 WHERE USER_EMAIL =#{userEmail}
	</select>
	
	<update id="restoreUserChadanDate">
		UPDATE USER_PROFILE
			 SET USER_CHADAN_REGIST_DATE = NULL
			 WHERE USER_EMAIL = #{userEmail}
	</update>
	<update id="restoreUserChadanCount">
		UPDATE USER_PROFILE
			 SET USER_CHADAN_COUNT = 0
			 WHERE USER_EMAIL = #{userEmail}
	</update>
	<!-- NOTE [회원관리 : 이메일 중복체크 쿼리문] -->
	<select id="searchEmail" parameterType="java.util.Map"
		resultType="java.lang.Boolean">
		SELECT
		CASE WHEN COUNT(*) > 0 THEN 'TRUE' ELSE 'FALSE' END
		<choose>
			<when test='site == "T"'>
				FROM USER_PROFILE
			</when>
			<when test='site == "N"'>
				FROM NAVER_USER_PROFILE
			</when>
			<when test='site == "K"'>
				FROM KAKAO_USER_PROFILE
			</when>
			<when test='site == "G"'>
				FROM GOOGLE_USER_PROFILE
			</when>
		</choose>
		WHERE USER_EMAIL=#{userEmail}
	</select>


	<!-- NOTE [회원관리 : 닉네임 중복 쿼리문] -->
	<select id="searchNickName"	resultType="java.lang.Boolean">
		SELECT
		CASE WHEN COUNT(USER_NICKNAME) > 0 THEN 'TRUE' ELSE
		'FALSE' END
		FROM(
		SELECT up.USER_NICKNAME AS USER_NICKNAME
		FROM
		USER_PROFILE up
		UNION
		SELECT kup.USER_NICKNAME AS USER_NICKNAME
		FROM
		KAKAO_USER_PROFILE kup
		UNION
		SELECT nup.USER_NICKNAME AS USER_NICKNAME
		FROM NAVER_USER_PROFILE nup
		UNION
		SELECT gup.USER_NICKNAME AS
		USER_NICKNAME
		FROM GOOGLE_USER_PROFILE gup)
		WHERE
		USER_NICKNAME=#{changeNickName}
	</select>

	<!--NOTE [회원관리 : 일반유저 회원등록 쿼리] -->
	<insert id="commRegist" parameterType="java.util.Map">
		INSERT INTO USER_PROFILE
		(USER_ACCOUNT_ID,
		USER_EMAIL, USER_PASSWORD, USER_NAME,
		USER_NICKNAME,
		USER_AUTH, USER_PHONE_NUMBER, USER_AUTO_LOGIN_TOKEN,
		USER_JOIN_DATE,
		USER_LAST_ACCESS_DATE, USER_GENDER,
		USER_SITE, USER_BIRTH,
		USER_PROFILE_FILE, USER_DELFLAG)
		VALUES((SELECT 'TMTD'|| ID AS
		USER_ACCOUNT_ID
		FROM(SELECT MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1
		AS ID
		FROM(SELECT USER_ACCOUNT_ID AS ID FROM
		(SELECT USER_ACCOUNT_ID
		FROM USER_PROFILE up
		UNION
		SELECT USER_ACCOUNT_ID FROM
		NAVER_USER_PROFILE nup
		UNION
		SELECT USER_ACCOUNT_ID FROM
		KAKAO_USER_PROFILE kup
		UNION
		SELECT USER_ACCOUNT_ID FROM
		GOOGLE_USER_PROFILE gup)))),
		#{userEmail}, #{userPassword},#{userName},
		(SELECT '타문타답'|| ID AS USER_ACCOUNT_ID
		FROM(
		SELECT
		MAX(CAST(REPLACE(ID,'TMTD') AS NUMBER))+1 AS ID
		FROM(SELECT
		USER_ACCOUNT_ID AS ID
		FROM(SELECT USER_ACCOUNT_ID FROM USER_PROFILE up
		UNION
		SELECT USER_ACCOUNT_ID FROM NAVER_USER_PROFILE nup
		UNION
		SELECT
		USER_ACCOUNT_ID FROM KAKAO_USER_PROFILE kup
		UNION
		SELECT USER_ACCOUNT_ID
		FROM GOOGLE_USER_PROFILE gup)))),
		#{userAuth},#{userPhoneNumber},
		#{userAutoLoginToken},
		CURRENT_DATE,CURRENT_DATE , #{userGender},
		'T',
		#{userBirth}, '기본경로 잡아주기' , 'N')
	</insert>

	<!-- NOTE [회원관리 : 해당 USERID를 이용해 정지여부 판단] -->
	<select id="searchJeongJi" resultType="java.lang.Integer">
		SELECT
		COUNT(USJE_JEONGJI_SANGTAE)
		FROM USER_JEONGJI uj
		WHERE USJE_ACCOUNT_ID =
		#{userAccountId}
		AND NOT USJE_JEONGJI_SANGTAE IN ('N')
	</select>
</mapper>